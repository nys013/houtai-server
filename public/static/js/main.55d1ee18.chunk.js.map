{"version":3,"sources":["api/ajax.js","api/index.js","utils/storageUtils.js","redux/actions.js","redux/action-types.js","pages/login/login.jsx","utils/dateUtils.js","components/link-button/index.js","components/header/header.jsx","config/menuConfig.js","components/left-nav/left-nav.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","pages/product/home.jsx","utils/constants.js","pages/product/picture-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/main/main.jsx","app.js","redux/reducer.js","redux/store.js","index.js","assets/imgs/logo.png"],"names":["ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","BASE","reqWeather","city","jsonp","err","results","weather_data","dayPictureUrl","weather","status","reqCategorys","parentId","reqAddCategory","categoryName","reqProducts","pageNum","pageSize","reqSearchProducts","searchKey","searchType","reqCategory","categoryId","reqUpdateStatus","productId","reqDeletePic","name","reqAddOrUpdateProduct","product","_id","reqAddRole","roleName","reqUpdateRole","role","user","store","set","remove","setHeaderTitle","headerTitle","logout","storage","Login","handleSubmit","event","preventDefault","props","form","validateFields","values","a","console","log","login","this","validatorPwd","rule","value","callback","length","test","to","className","src","logo","alt","msg","onSubmit","Item","getFieldDecorator","rules","required","max","min","pattern","initialValue","prefix","style","color","placeholder","validator","htmlType","Component","WrapLogin","create","connect","state","dispatch","result","success","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","LinkButton","confirm","Header","currentTime","getCurrentTime","intervalId","setInterval","now","setState","getWeather","title","okText","cancelText","onOk","clearInterval","onClick","withRouter","menuList","key","icon","isPublic","children","SubMenu","LeftNav","setAuth","item","menus","indexOf","find","child","getMenuNodes_reduce","reduce","pretotal","path","location","pathname","cItem","openKey","push","MenuNodes","mode","theme","selectedKeys","defaultOpenKeys","Home","fontSize","fontWeight","textAlign","Option","AddForm","setForm","categorys","map","c","propsTypes","PropTypes","array","isRequired","string","func","UpdateForm","Category","loading","category","secCategory","parentName","visible","initColumns","columns","dataIndex","render","showUpdate","getSecCategorys","width","getCategorts","getFirCategory","showAdd","addCategory","resetFields","updateCategory","getFieldValue","handleCancel","marginRight","extra","dataSource","rowKey","bordered","pagination","defaultPageSize","showQuickJumper","onCancel","products","total","getProducts","updatePage","list","updateStatus","productPage","addProduct","history","price","btnText","statusText","defaultValue","onChange","margin","target","current","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","handlePreview","preview","originFileObj","previewImage","handleChange","fileList","getPictures","imgs","img","index","uid","uploadButton","accept","action","listType","onPreview","footer","React","RichTextEditor","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","getEditor","draftToHtml","convertToRaw","editorState","getCurrentContent","onEditorStateChange","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","wrapperClassName","editorStyle","border","minHeight","padding","toolbar","image","uploadCallback","present","mandatory","TextArea","AddUpdate","options","pw","editor","desc","categoryIds","pCategoryId","isUpdate","goBack","validatorPrice","getCategorys","firCategorys","label","isLeaf","secCategorys","cOptions","option","loadData","selectedOptions","targetOption","createRef","labelCol","xs","span","sm","wrapperCol","autoSize","minRows","maxRows","addonAfter","ref","Detail","cName1","cName2","all","dangerouslySetInnerHTML","__html","Product","component","exact","TreeNode","AuthForm","getTreeNodes","treeNodes","checkedKeys","onCheck","disabled","defaultExpandAll","checkable","PureComponent","Role","roles","isShowAdd","isShowAuth","create_time","getRoleList","onRow","addRole","setRole","auth_time","auth_name","role_id","info","rowSelection","selectedRowKeys","onSelect","UserForm","phone","email","object","User","users","rolesName","deleteUser","getUsers","getRolesName","preTotal","addOrUpdateUser","okType","userId","Bar","sales","stores","update","setOption","text","tooltip","legend","xAxis","yAxis","series","Line","Pie","backgroundColor","left","top","textStyle","trigger","formatter","visualMap","show","inRange","colorLightness","radius","center","sort","b","roseType","labelLine","lineStyle","smooth","length2","itemStyle","shadowBlur","shadowColor","animationType","animationEasing","animationDelay","idx","Math","random","NotFound","goHome","replace","Footer","Sider","Content","Main","from","App","inituser","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.55d1ee18.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax (url,data={},type=\"GET\"){\r\n  return new Promise((resolve,reject) => {\r\n    let promise\r\n    if(type===\"GET\"){\r\n      promise =  axios.get(url,{\r\n        params:data\r\n      })\r\n    }else{\r\n      promise = axios.post(url,data)\r\n    }\r\n    promise.then(response =>{\r\n      resolve(response.data)\r\n    }).catch(error => {\r\n      message.error('请求发生错误'+error)\r\n    })\r\n  })\r\n\r\n}","import ajax from './ajax.js'\r\nimport {message} from 'antd'\r\nimport jsonp from 'jsonp'\r\n\r\nconst BASE = '/api'\r\n//获取登录数据\r\nexport const reqLogin = (username,password) => ajax(BASE +\"/login\",{username,password},\"POST\")\r\n//添加、更新用户\r\nexport const reqAddOrUpdateUSer = (user) => ajax(BASE +\"/manage/user/\"+ (user._id ? \"update\" : \"add\"),user,\"POST\")\r\n//获取天气\r\nexport const reqWeather = (city)=>{\r\n  return new Promise((resolve , reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 使用jsonp的库获取数据\r\n    jsonp(url,{},(err,data)=>{\r\n      if(!err){\r\n        // 通过浏览器和插件访问url可以查看数据结构，然后取出我们想要的数据\r\n        const {dayPictureUrl,weather} = data.results[0].weather_data[0]\r\n        if(data.status==='success'){\r\n          resolve({dayPictureUrl,weather})\r\n        }else{\r\n          message.error('获取天气信息失败')\r\n        }\r\n      }\r\n\r\n    })\r\n  })\r\n}\r\n//获取1级/2级分类\r\nexport const reqCategorys = (parentId) => ajax(BASE +'/manage/category/list',{parentId})\r\n//添加分类\r\nexport const reqAddCategory = (categoryName,parentId) => ajax(BASE +'/manage/category/add',{categoryName,parentId},\"POST\")\r\n//更新分类\r\nexport const reqUpdateCategory = ({categoryName,categoryId}) => ajax(BASE +'/manage/category/update',{categoryName,categoryId},\"POST\")\r\n\r\n//获取商品分页列表\r\nexport const reqProducts = (pageNum,pageSize) => ajax(BASE +'/manage/product/list',{pageNum,pageSize})\r\n\r\n//搜索商品\r\nexport const reqSearchProducts = ({pageNum,pageSize,searchKey,searchType}) => ajax(BASE +'/manage/product/search',{\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]:searchKey\r\n})\r\n\r\n//根据分类ID获取分类\r\nexport const reqCategory = (categoryId) => ajax(BASE +'/manage/category/info',{categoryId})\r\n//对商品进行上架/下架处理\r\nexport const reqUpdateStatus = (productId , status ) => ajax(BASE +'/manage/product/updateStatus',{productId , status},\"POST\")\r\n\r\n//删除图片\r\nexport const reqDeletePic = (name) => ajax(BASE +'/manage/img/delete',{name},'POST')\r\n\r\n//添加/更新商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE +'/manage/product/' + (product._id? 'update' : 'add') ,product ,'POST')\r\n\r\n//获取角色列表\r\nexport const reqRoleList = () => ajax(BASE +'/manage/role/list')\r\n//添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE +'/manage/role/add',{roleName},'POST')\r\n//更新角色\r\nexport const reqUpdateRole = (role) => ajax(BASE +'/manage/role/update',role,'POST')\r\n\r\n//获取用户列表\r\nexport const reqUserList = ()=> ajax(BASE +'/manage/user/list')\r\n// 删除用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE +'/manage/user/delete' , {userId} , \"POST\")","// 原生js对localStorage的操作，在老版本浏览器不兼容，所以用了个小库\r\nimport store from 'store'\r\n\r\nconst USER_KEY = 'user_key'\r\n\r\nexport default {\r\n  //保存\r\n  saveUser (user) {store.set(USER_KEY,user)},\r\n  //获取\r\n  getUser () {return store.get(USER_KEY) || {}},\r\n  //删除\r\n  removeUser () {store.remove(USER_KEY)}\r\n}\r\n\r\n// 原生js写法\r\n/* export default {\r\n  //保存\r\n  saveUser (user) {\r\n    localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n  },\r\n  //获取\r\n  getUser () {\r\n    return JSON.parse(localStorage.getItem(USER_KEY) || \"{}\" )\r\n  },\r\n  //删除\r\n  removeUser () {\r\n    localStorage.removeItem(USER_KEY)\r\n  }\r\n} */","import {SET_HEADER_TITLE , RECEIVE_USER , SEND_ERROR_MSG , RESET_USER  ,UPDATE_PAGE} from './action-types.js'\r\nimport {reqLogin} from '../api/index.js'\r\nimport storage from '../utils/storageUtils.js'\r\nimport {message} from 'antd'\r\n\r\nexport const setHeaderTitle = (headerTitle) => ({type:SET_HEADER_TITLE,data:headerTitle})\r\n\r\nexport const receiveUser = (user) => ({type:RECEIVE_USER , user})\r\n\r\nexport const errorMsg = (msg) => ({type:SEND_ERROR_MSG , msg})\r\n\r\nexport const logout = () => {\r\n  //清除浏览器localstorage中储存的数据\r\n  storage.removeUser()\r\n  //返回action，让reducer去处理数据\r\n  return {type:RESET_USER }\r\n}\r\n\r\n/*登录的异步action*/\r\nexport const login = (username,password) => {\r\n  return async dispatch => {\r\n    const result = await reqLogin(username,password)\r\n    if(result.status===0){\r\n      //存储user\r\n      storage.saveUser(result.data)\r\n      dispatch(receiveUser(result.data))\r\n      // 提示登录成功\r\n      message.success('登录成功')\r\n    }else{\r\n      /*1.直接显示错误信息(在reducer中将msg放入redux了，就在页面显示用自己定义的，不同UI组件了)*/\r\n      // message.error(result.msg)\r\n      /*2.分发错误action*/\r\n      dispatch(errorMsg(result.msg))\r\n\r\n    }\r\n  }\r\n}\r\n\r\n// 更新商品页数的同步action\r\nexport const updatePage = (pageNum) => ({type:UPDATE_PAGE,pageNum})\r\n","\r\nexport const SET_HEADER_TITLE = 'set_header_title'\r\n\r\nexport const RECEIVE_USER = 'receive_user'\r\n\r\nexport const SEND_ERROR_MSG = 'send_error_msg'\r\n\r\nexport const RESET_USER = 'reset_user'\r\n\r\nexport const UPDATE_PAGE = 'update_page'","/* \n  这个是之前表单验证的版本，比较复杂，现在的表单验证简单许多了，参见另一个版本\n  不过这里还是用旧版本，因为其他已经页面用了旧版本，改动太多，这里只是想说明版本更新了，如果真的需要就下载新版，然后一个个改\n*/\n\nimport React, {Component} from 'react'\nimport { Form, Icon, Input, Button } from 'antd';\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport './login.less'\nimport logo from './../../assets/imgs/logo.png'\nimport {login} from '../../redux/actions.js'\n// 使用redux管理了，所以不用引用下面两个了——不在UI组件发送异步请求，使用redux管理不用localstorage\n/* import {reqLogin} from '../../api'\nimport storage from '../../utils/storageUtils.js' */\n\nclass Login extends Component {\n\n  handleSubmit = (event)=>{\n    // react已经在浏览器兼容处理了\n    // event = event || window.event\n    event.preventDefault()\n    //统一验证\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const {username,password} = values\n        //不能这么写，因为这是个异步执行的，要么分开取，要么就要在ajax返回的时候就直接返回的data\n        //const result = await reqLogin(username,password).data\n        /*使用redux后，下面不用了\n        const result = await reqLogin(username,password)\n        if(result.status===0){\n          //存储user\n          storage.saveUser(result.data)\n          //在事件的回调函数里面，就用history的方法进行跳转，在render里面就用路由的重定向跳转\n          this.props.history.replace('/home')\n          message.success(\"登陆成功\")\n        }else{\n          message.error(result.msg)\n        }*/\n        this.props.login(username,password)\n      }else{\n        console.log('提交失败')\n      }\n    })\n\n    //尝试获取表单的数据，先要确保对应的 field 已经用 getFieldDecorator 注册过了。\n   /* const values = this.props.form.getFieldsValue()\n    console.log(values);*/\n  }\n\n  validatorPwd = (rule,value,callback)=>{\n    if(!value){\n      callback('密码必须输入')\n    }else if (value.length<4){\n      callback('密码长度不能小于4位')\n    }else if (value.length>12){\n      callback('密码长度不能超过12位')\n    }else if (!/^[A-z0-9_]+$/.test(value)){\n      callback('密码必须以字母、数字或下划线组成')\n    }else{\n      callback()\n    }\n  }\n  render (){\n    //若是已经登录成功，那么就无法访问登录界面,需要跳转到管理界面\n    const {user} = this.props\n    if(user._id){\n      return <Redirect to='/home' />\n    }\n\n    return(\n        <div className=\"login-wrap\">\n          <div className=\"login-header\">\n            <img src={logo} alt=\"logo\"/>\n            <h1>React项目：后台管理系统</h1>\n          </div>\n          <div className=\"login-content\">\n            <div className={user.msg ? 'error-msg show' : 'error-msg'}>{user.msg}</div>\n            <h2>用户登录</h2>\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n              <Form.Item>\n                {\n                  this.props.form.getFieldDecorator(\"username\", {\n                    rules:[\n                      //声名式校验\n                      {required:true,message:\"用户名必须输入\"},\n                      {max:12,message:\"用户名长度不能超过12位\"},\n                      {min:3,message:\"用户名长度不能小于3位\"},\n                      {pattern:/^[A-z0-9_]+$/,message:\"用户名必须以字母、数字或下划线组成\"}\n                    ],\n                    //设置初始值\n                    initialValue:'admin'\n                  })(\n                    <Input\n                      // prefix是指带有前缀图标的input，参数可为react节点，即可为Icon标签\n                      prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      placeholder=\"用户名\"\n                      />\n                  )\n                }\n              </Form.Item>\n              <Form.Item>\n                {\n                  this.props.form.getFieldDecorator(\"password\", {\n                    rules:[\n                      //自定义校验\n                      {validator:this.validatorPwd}\n                    ]\n                  })(\n                    <Input\n                      prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      type=\"password\"\n                      placeholder=\"密码\"\n                      />\n                  )\n                }\n\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                  登录\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n    )\n  }\n}\n\n// create是高阶函数，将form上的属性赋到Login组件上\nconst WrapLogin = Form.create()(Login)\nexport default connect(\n  state => ({user:state.user}),\n  {login}\n)(WrapLogin)","/*包 含 n个 日 期 时 间 处 理 的 工 具 函 数 模 块*/\r\n\r\n/* 格 式 化 日 期 */\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' '\r\n    + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","// 一个简单的UI组件：自定义按钮\r\n// 一般我们需要点击的效果，用a标签，然后禁止其默认跳转行为，但是其实a标签本身会有一些问题，官方文档也不建议这样使用\r\n// 那么我们就用button来替代a，但是button，很丑啊\r\n// 所以就需要对样式进行修改，让它外表是a，功能还是button\r\n\r\nimport React from 'react'\r\n\r\nimport './index.less'\r\n\r\nexport default function LinkButton (props){\r\n  return <button {...props} className='link-button'></button>\r\n}\r\n","import React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal } from 'antd';\r\nimport {connect} from 'react-redux'\r\n\r\nimport './header.less'\r\nimport {reqWeather} from '../../api'\r\nimport {formateDate} from '../../utils/dateUtils.js'\r\nimport LinkButton from '../link-button'\r\nimport {logout} from '../../redux/actions.js'\r\n// import menuList from '../../config/menuConfig.js'\r\n//import storage from '../../utils/storageUtils.js'\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    currentTime:'',\r\n    weather:'',\r\n    dayPictureUrl :''\r\n  }\r\n\r\n  // 通过循环定时器，1s获取一次当前时间，然后进行格式化后，更新组件状态\r\n  getCurrentTime = ()=>{\r\n    this.intervalId = setInterval(()=>{\r\n      const currentTime =formateDate(Date.now())\r\n      this.setState({currentTime})\r\n    },1000)\r\n  }\r\n\r\n  // 获取天气信息，通过调用封装好的ajax获取(因为天气只有头部组件需要，就没有交于redux管理，就不需要像之前通过action)\r\n  getWeather = async(city)=>{\r\n    const {dayPictureUrl,weather} = await reqWeather(city)\r\n    // 获取到的天气信息数据，更新当前组件状态\r\n    this.setState({dayPictureUrl,weather})\r\n  }\r\n\r\n  /*这个用了redux之后就用不着了*/\r\n  /*getTitle = ()=>{\r\n    const path = this.props.location.pathname\r\n    menuList.forEach((item) =>{\r\n      if(item.key === path){\r\n        //debugger\r\n        this.title = item.title\r\n      }else if(item.children){\r\n          const cItem =item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n          if (cItem){\r\n            this.title = cItem.title\r\n          }\r\n      }\r\n    })\r\n  }*/\r\n\r\n  logout = ()=>{\r\n    // 使用UI函数，confirm是Modal对话框中的方法\r\n      confirm({\r\n        title: '你确定要退出吗？',\r\n        okText: '确定',\r\n        cancelText: '取消',\r\n        //这里必须用箭头函数，因为里面的this需要是外部的this，而不是函数的this\r\n        onOk:() => {\r\n          /*用了redux就不用这个了*/\r\n          /*storage.removeUser()\r\n          this.props.history.replace('/login')*/\r\n\r\n          this.props.logout()\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n\r\n  //异步操作，执行定时器，一般都在这--在render后执行，只执行一次\r\n  componentDidMount (){\r\n    this.getCurrentTime()\r\n    this.getWeather('上海')\r\n  }\r\n\r\n  //在要卸载时关闭定时器，防止内存泄露(例如：退出登录后不需要定时器)\r\n  componentWillUnmount (){\r\n    clearInterval(this.intervalId)\r\n  }\r\n\r\n  render (){\r\n    const {currentTime, weather, dayPictureUrl} = this.state\r\n    return(\r\n      <div className='header' >\r\n        <div className=\"header-top\">\r\n          <span>欢迎：{this.props.user.username}</span>\r\n          <LinkButton onClick={this.logout} >退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">\r\n            <h1>{this.props.headerTitle}</h1>\r\n          </div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            <img src={dayPictureUrl} alt=\"\"/>\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({headerTitle:state.headerTitle,user:state.user}),\r\n  {logout}\r\n)(withRouter(Header))","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'windows',\r\n  },\r\n]\r\n\r\nexport default menuList","import React, {Component} from 'react'\r\n// 引入路由相关 withRouter是让非路由组件能够有路由组件的三个属性，Link就是跳转组件，设定to的属性值为某一地址，点击跳转（类似于onClick事件触发后this.props.history.push('')\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport { Menu, Icon } from 'antd';\r\nimport {connect} from 'react-redux'\r\n\r\n// 引入样式，虽然antd有默认样式，但是我们还需要根据自己的需求修改\r\nimport './left-nav.less'\r\n// 图标\r\nimport logo from '../../assets/imgs/logo.png'\r\n// 封装好的menu相关信息的数组\r\nimport menuList from '../../config/menuConfig.js'\r\n// 发送设置头部标题的请求（这里是同步的），仅仅是为了将点击的nav-list的标题存到redux中，方便header组件获取\r\nimport {setHeaderTitle} from '../../redux/actions.js'\r\n// import storageUtils from '../../utils/storageUtils.js'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component {\r\n\r\n  setAuth = (item) => {\r\n    /*有权限的情况\r\n    * 1.admin\r\n    * 2.相应item的key值\r\n    * 3.首页必须设置，isPublic\r\n    * */\r\n    const {isPublic , key , children} = item\r\n    const {role , username} = this.props.user\r\n\r\n    if( isPublic || username==='admin' || role.menus.indexOf(key) !==-1 ){\r\n      return true\r\n    } else if(children){  //因为role中的menus是不含一级菜单的key，那么就算其子菜单有权限，还是不会显示，所以就要判断有无children\r\n      return !!children.find(child => role.menus.indexOf(child.key) !== -1)\r\n    }\r\n    return false\r\n  }\r\n\r\n  //用map方法遍历写出结构，用了递归调用\r\n  /*getMenuNodes_map = (menuList)=>{\r\n    return menuList.map(item=>{\r\n      if(!item.children){\r\n        return(\r\n          <Menu.Item key={item.key} >\r\n            <Link to={item.key}>\r\n              <Icon type={item.icon} />\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      }else{\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </span>\r\n            }\r\n            >\r\n            {this.getMenuNodes_map(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n    })\r\n  }*/\r\n\r\n  //用reduce方法将一个个结构加进去,用了递归调用(需要根据数据结构，一层层取出)\r\n  getMenuNodes_reduce = (menuList)=>{\r\n    return menuList.reduce((pretotal,item)=>{\r\n      const path = this.props.location.pathname\r\n      // 如果有权限才进入以下判断\r\n      if(this.setAuth(item)){\r\n        if(!item.children){\r\n          if(path.indexOf(item.key)===0 ){\r\n            // 当前请求路径中能找到item.key,就将该item的标题设为头部标题\r\n            // (注意不直接===比较，而是用字符串的方法查找是因为如果进入三级路由也仍然要显示这个item.title)\r\n            this.props.setHeaderTitle(item.title)\r\n          }\r\n          // 如果没有子菜单，那就直接push这个\r\n          pretotal.push((\r\n            <Menu.Item key={item.key} >\r\n              <Link to={item.key} onClick={() => this.props.setHeaderTitle(item.title)} >\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))\r\n        }else{\r\n          // 当 当前路径含有子菜单key时，返回该子菜单\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0 )\r\n          if(cItem){\r\n            // 如果cItem存在，那么openKey为当前父Item的key(因为要用于展开，原理是当前访问了子菜单，父菜单展开，刷新后依旧展开，那就需要记录当前key)\r\n            this.openKey = item.key\r\n          }\r\n          // 在有子菜单的情况下，多了SubMenu\r\n          pretotal.push((\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n              <span>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </span>\r\n            }\r\n              >\r\n                {/* 子菜单递归调用，形成相应的菜单 */}\r\n              {this.getMenuNodes_reduce(item.children)}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n      // reduce方法最后都要返回pretotal\r\n      return pretotal\r\n    },[])\r\n  }\r\n\r\n  /*componentWillMount(){\r\n    //让他只执行一遍，在render中会重复执行多次\r\n    this.MenuNodes = this.getMenuNodes_reduce(menuList)\r\n  }*/\r\n  /*componentWillMount已经废弃，改用constructor，在第一次render之前执行*/\r\n  constructor(props){\r\n    super(props)\r\n    //让他只执行一遍，在render中会重复执行多次\r\n    this.MenuNodes = this.getMenuNodes_reduce(menuList)\r\n  }\r\n  render (){\r\n    let path = this.props.location.pathname\r\n    // 重设path，用于selectedKeys，避免到三级路由时selectedKeys无对应值\r\n    path = path.indexOf('/product')===0 ? '/product': path\r\n\r\n    const openKey = this.openKey\r\n    return(\r\n      <div className='left-nav' >\r\n\r\n        <Link to=\"/\" className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          // 当前选中菜单项的数组，就为当前请求的路径\r\n          selectedKeys={[path]}\r\n          // 设置默认展开key，openKey是通过前面reduce时得到的，在刷新后仍旧展开相应key\r\n          defaultOpenKeys={[openKey]}\r\n          >\r\n          {\r\n            //this.getMenuNodes_map(menuList)\r\n            this.MenuNodes\r\n          }\r\n        </Menu>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 因为一开始没有用redux，所以没有containers的概念，否则应该不在components文件夹下的(不过影响不大，就是个规范问题)\r\nexport default connect(\r\n  state => ({user:state.user}),\r\n  {setHeaderTitle}\r\n)(withRouter(LeftNav))","// 首页\r\nimport React, {Component} from 'react'\r\nexport default class Home extends Component {\r\n  render (){\r\n    return(\r\n      <div>\r\n        <h2 style={{\r\n          fontSize:80,\r\n          fontWeight:\"bold\",\r\n          textAlign:\"center\",\r\n        }} >欢迎进入硅谷后台</h2>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Form , Select,Input} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst {Item} = Form\r\nconst {Option} =Select\r\n\r\nclass AddForm extends Component {\r\n  static propsTypes = {\r\n    categorys:PropTypes.array.isRequired,   //一级分类数组\r\n    parentId:PropTypes.string.isRequired,   //父分类id\r\n    setForm:PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor (props){\r\n    super(props)\r\n    //给父级传递form对象（通过父组件传函数，子组件调用函数的形式，给父组件传递子组件数据）\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render (){\r\n    const { getFieldDecorator } = this.props.form\r\n    const { parentId ,categorys } = this.props\r\n    return(\r\n      <Form>\r\n        <Item>\r\n        {\r\n          getFieldDecorator(\"parentId\",{\r\n            initialValue:parentId\r\n          })(\r\n              // 通过下拉列表选择分类\r\n              <Select>\r\n                <Option value=\"0\" >一级分类</Option>\r\n                {\r\n                  categorys.map(c => (\r\n                    <Option value={c._id} key={c._id} >{c.name}</Option>\r\n                  ))\r\n                }\r\n              </Select>\r\n          )\r\n        }\r\n        </Item>\r\n\r\n        <Item>\r\n          {\r\n            getFieldDecorator(\"categoryName\",{\r\n              rules:[\r\n                {required:true,message:\"分类名必须输入\"}\r\n              ]\r\n            })(\r\n              <Input placeholder=\"请输入分类名称\"></Input>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {Component} from 'react'\r\nimport {Form  ,Input} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst {Item} = Form\r\n\r\nclass UpdateForm extends Component {\r\n\r\n  static propsTypes = {\r\n    categoryName:PropTypes.string.isRequired,\r\n    setForm:PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor (props){\r\n    super(props)\r\n    //给父级传递form对象\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render (){\r\n    const { getFieldDecorator } = this.props.form\r\n    return(\r\n      <Form>\r\n      <Item>\r\n          {\r\n            getFieldDecorator(\"categoryName\",{\r\n              initialValue:this.props.categoryName,\r\n              rules:[\r\n                {required:true,message:\"分类名必须输入\"}\r\n              ]\r\n            })(\r\n              <Input placeholder=\"请输入分类名称\"></Input>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)","import React, {Component} from 'react'\r\nimport {Card,Icon,Button,Table,message,Modal} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys,reqAddCategory,reqUpdateCategory} from '../../api'\r\n// 添加分类组件\r\nimport AddForm from './add-form'\r\n// 更新（修改）分类组件\r\nimport UpdateForm from './update-form'\r\n\r\nexport default class Category extends Component {\r\n\r\n  state = {\r\n    loading:false,\r\n    category:\"\",\r\n    categorys : [],\r\n    secCategory:[],\r\n    parentId :\"0\",  //当前分类的父分类id，一级分类父分类就是0\r\n    parentName:\"\",\r\n    visible:0 //0不显示，1添加显示，2更新显示\r\n  }\r\n\r\n  // 初始化columns\r\n  initColumns = ()=>{\r\n    this.columns = [\r\n      {\r\n        title: '分类名称',\r\n        dataIndex: 'name'   //列数据在数据项中对应的路径\r\n        //key: '_id'  设置了唯一的dataIndex可以忽略key\r\n      },\r\n      {\r\n        title:\"操作\",\r\n        // Function(text, record, index) {}\r\n        //text是指，在没有指定dataindex的情况下，该对象就是表示当前选中这一行的对象\r\n        render:(category) => (\r\n          <span>\r\n            <LinkButton onClick={()=>this.showUpdate(category)} >修改分类</LinkButton>\r\n            {category.parentId===\"0\" && <LinkButton onClick={() => this.getSecCategorys(category)} >查看子分类</LinkButton>}\r\n          </span>\r\n        ),\r\n        width:300\r\n      }\r\n    ]\r\n  }\r\n\r\n  //获取分类列表  \r\n  getCategorts = async (parentId) => {\r\n    // async函数内部同步执行，这是在发送请求前loading为true\r\n    this.setState({loading:true})\r\n    // parentId 有值通过该值，无值通过状态\r\n    parentId = parentId || this.state.parentId\r\n    // 发送异步请求，await进行等待，获取到result后再往后执行\r\n    const result = await reqCategorys(parentId)\r\n    // 请求发送完，获取到数据后，更新状态loading为false，loading图标消失，展现数据\r\n    this.setState({loading:false})\r\n    if(result.status === 0){\r\n      if(parentId === \"0\"){\r\n        // 父分类为0，则是一级分类数据\r\n        this.setState({categorys:result.data})\r\n      }else{\r\n        // 否则就是二级分类数据\r\n        this.setState({secCategory:result.data})\r\n      }\r\n    }else{\r\n      message.error('分类数据获取失败')\r\n    }\r\n  }\r\n  \r\n  //获取二级分类列表\r\n  getSecCategorys = (category)=> {\r\n    //在react事件回调中，更新状态是异步的，所以通过第二个参数传回调函数，使得更新二级列表在更新状态后执行\r\n    this.setState({parentId:category._id,parentName:category.name},()=>{\r\n      this.getCategorts(this.state.parentId)\r\n    })\r\n    // 其实就算不使用上面的写法也是可以的，因为可以直接用ategory._id，不必用this.state.parentId，不过这里主要是想说明setState的异步更新问题\r\n    // this.getCategorts(category._id)\r\n  }\r\n\r\n  //获取一级分类列表（因为一开始就获取到了一级分类列表存在state中了，这个时候只需要更新二级相关的state就够了）\r\n  getFirCategory = ()=>{\r\n    this.setState({\r\n      secCategory:[],\r\n      parentId :\"0\",\r\n      parentName:\"\"\r\n    })\r\n  }\r\n  \r\n  //显示添加的对话框\r\n  showAdd = () => {\r\n    this.setState({visible:1})\r\n  }\r\n  //添加分类列表\r\n  addCategory =  () => {\r\n\r\n    //需要完成表单验证，才能添加\r\n    this.form.validateFields(async (error,values) => {\r\n      if(error){\r\n        return\r\n      }\r\n      this.setState({visible:0})\r\n\r\n      //因为这里的values取了form里的值，所以可以写成\r\n      const {categoryName , parentId} = values\r\n      //清除存储的数据，不让这些数据保留下来显示在对话框中（需要在获取之后再清除）\r\n      this.form.resetFields()\r\n      const result = await reqAddCategory(categoryName,parentId)\r\n      // 获取到数据状态为0，即成功\r\n      if(result.status===0){\r\n        // 以下两个逻辑根据需求决定，简单梳理一下即可\r\n        if(parentId === this.state.parentId){\r\n          // 如果当前添加分类的父分类和点击去分类的父分类一致（即给当前分类添加子分类）就要重新获取一次分类数据以展现\r\n          this.getCategorts(this.state.parentId)\r\n        }else if (parentId === \"0\"){\r\n          // 如果是给一级分类添加也重新获取 \r\n          this.getCategorts(\"0\")\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n  //显示更新的对话框\r\n  showUpdate = (category) => {\r\n    this.setState({visible:2,category})\r\n  }\r\n  //更新分类列表\r\n  updateCategory =  () => {\r\n    this.form.validateFields( async (error,values) => {\r\n      if(error){\r\n        return\r\n      }\r\n      //1.关闭对话框\r\n      this.setState({visible:0})\r\n      //  2.发送请求\r\n      const categoryId = this.state.category._id\r\n      const categoryName = this.form.getFieldValue(\"categoryName\")\r\n      // 获取到数据后清除缓存\r\n      this.form.resetFields()\r\n      const result = await reqUpdateCategory({categoryName,categoryId})\r\n      //  3.更新列表\r\n      if(result.status === 0){\r\n        this.getCategorts(this.state.parentId)\r\n      }\r\n    })\r\n  }\r\n  //对话框取消\r\n  handleCancel = () => {\r\n    //清除存储的数据，不让这些数据保留下来显示在对话框中（需要在获取之后再清除）\r\n    this.form.resetFields()\r\n    this.setState({visible:0})\r\n  }\r\n\r\n  //初始化，在render前\r\n  constructor (props){\r\n    super(props)\r\n    this.initColumns()\r\n  }\r\n  // 第一次render后，挂载完毕时，发送异步请求\r\n  componentDidMount (){\r\n    // 获取分类列表(写在外面可以使得在生命周期函数中看的清楚些)\r\n    this.getCategorts(this.state.parentId)\r\n  }\r\n\r\n  render (){\r\n    const {categorys,loading,parentId,secCategory,parentName,category} = this.state\r\n    return(\r\n      <div>\r\n        <Card\r\n          title={parentId===\"0\" ? \"一级商品分类\" : (\r\n            <span>\r\n              <LinkButton onClick={this.getFirCategory} >一级商品分类</LinkButton>\r\n              <Icon type='arrow-right' style={{marginRight:5}} />\r\n              <span>{parentName}</span>\r\n            </span>\r\n          )}\r\n          extra={\r\n            <Button type='primary' onClick={this.showAdd} >\r\n              <Icon type='plus'/>\r\n              <span >添加</span>\r\n            </Button>\r\n          }\r\n          >\r\n          <Table\r\n            dataSource={parentId===\"0\" ? categorys : secCategory}\r\n            columns={this.columns}\r\n            rowKey = '_id'\r\n            bordered\r\n            pagination = {{defaultPageSize:5,showQuickJumper:true}}\r\n            loading = {loading}\r\n            />\r\n\r\n          <Modal\r\n            title=\"添加分类\"\r\n            visible={this.state.visible===1}\r\n            onOk={this.addCategory}\r\n            onCancel={this.handleCancel}\r\n            >\r\n            <AddForm categorys={categorys} parentId={parentId} setForm={form => this.form = form}/>\r\n          </Modal>\r\n\r\n          <Modal\r\n            title=\"更新分类\"\r\n            visible={this.state.visible===2}\r\n            onOk={this.updateCategory}\r\n            onCancel={this.handleCancel}\r\n            >\r\n            <UpdateForm categoryName={category.name} setForm={form => this.form = form} />\r\n          </Modal>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card , Select , Input , Button , Icon , Table , message} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqProducts,reqSearchProducts,reqUpdateStatus} from '../../api/index.js'\r\nimport {PAGE_SIZE} from '../../utils/constants.js'\r\nimport {updatePage} from '../../redux/actions'\r\n\r\nconst {Option} = Select\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    products:[],\r\n    total: 0 ,\r\n    searchKey:'',\r\n    searchType:'productName',\r\n    // pageNum:0\r\n  }\r\n\r\n  getProducts = async(pageNum)=>{\r\n    //const pageNum = 1;\r\n    // 原做法：用该组件的state存\r\n    // this.setState({pageNum})\r\n    // 使用redux将pageNum存起来了\r\n    this.props.updatePage(pageNum)\r\n    const pageSize = PAGE_SIZE ;\r\n    let result\r\n    const {searchKey,searchType} = this.state\r\n    if(searchKey){\r\n      result = await reqSearchProducts({pageNum,pageSize,searchKey,searchType})\r\n    }else{\r\n      result = await reqProducts(pageNum,pageSize)\r\n    }\r\n    if(result.status ===0 ){\r\n      const {list , total} = result.data\r\n      this.setState({\r\n        products:list,\r\n        total\r\n      })\r\n    }\r\n  }\r\n\r\n  updateStatus = async (productId , status)=>{\r\n    const result = await reqUpdateStatus(productId , status)\r\n    if(result.status === 0){\r\n      message.success('更新成功')\r\n      this.getProducts(this.props.productPage || 1)\r\n    }\r\n  }\r\n\r\n  addProduct = ()=>{\r\n   this.props.history.push('/product/addupdate')\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.columns = [\r\n      {\r\n        title:\"商品名称\",\r\n        dataIndex:\"name\"\r\n      },\r\n      {\r\n        title:\"商品描述\",\r\n        dataIndex:\"desc\"\r\n      },\r\n      {\r\n        title:\"价格\",\r\n        dataIndex:\"price\",\r\n        render:(price)=>(\"￥\" + price)\r\n      },\r\n      {\r\n        title:\"状态\",\r\n        width:80,\r\n        render:(product)=>{\r\n          let {_id , status} = product\r\n\r\n          const btnText = status===1 ? \"下架\" : \"上架\"\r\n          const statusText = status===1 ? \"在售\" : \"已售空\"\r\n\r\n          status = status===1 ? 2 : 1 //1：在售，2：售空\r\n          return (\r\n              <span>\r\n                <Button type='primary' onClick={() => this.updateStatus(_id , status)} >{btnText}</Button>\r\n                <span>{statusText}</span>\r\n              </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title:\"操作\",\r\n        width:80,\r\n        render:(product) => {\r\n          return (\r\n            <span >\r\n              {/*push可以传两个参数，第一个是跳转地址，第二个是传state给目标路由组件*/}\r\n              <LinkButton onClick={() => this.props.history.push('/product/detail' , product )} >详情</LinkButton>\r\n              <LinkButton onClick={() => this.props.history.push('/product/addupdate' , product )}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\n  componentDidMount(){\r\n    //发送异步请求\r\n    this.getProducts(this.props.productPage || 1)\r\n  }\r\n\r\n  render (){\r\n    const {products , total ,searchKey} = this.state\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          defaultValue='productName'\r\n          style={{width:120}}\r\n          onChange={value => this.setState({searchType:value})}\r\n          >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{width:120,margin:\"0 10px\"}}\r\n          value={searchKey}\r\n          onChange={event => this.setState({searchKey:event.target.value})}\r\n          />\r\n        <Button type='primary' onClick={() => this.getProducts(1)} >搜索</Button>\r\n      </span>\r\n    )\r\n    const extra = (\r\n      <Button type='primary' onClick={this.addProduct} >\r\n        <Icon type='plus'/>\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n\r\n    return(\r\n      <Card\r\n        title={title}\r\n        extra={extra}\r\n        >\r\n        <Table\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          bordered\r\n          rowKey=\"_id\"\r\n          pagination={{//分页配置\r\n            current:this.props.productPage,\r\n            defaultPageSize:PAGE_SIZE,\r\n            total,\r\n            showQuickJumper:true,\r\n            onChange:value =>{\r\n              return  this.getProducts(value)\r\n            }\r\n          }}\r\n          />\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({productPage:state.productPage}),\r\n  {updatePage}\r\n)(Home)","\r\nexport const  PAGE_SIZE = 3\r\nexport const BASE_PIC_URL = 'http://localhost:5000/upload/'","/* \r\n  照片墙\r\n*/\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Upload, Icon, Modal , message } from 'antd';\r\nimport {reqDeletePic} from '../../api/index.js'\r\nimport {BASE_PIC_URL} from '../../utils/constants.js'\r\n\r\nconst BASE = '/api'\r\n//base64\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  //用constructor来初始化状态，因为这里可以进行数据的处理，而state只是一个对象\r\n  constructor(props) {\r\n    super(props)\r\n    /*\r\n     在 constructor() 函数中不要调用 setState() 方法。\r\n     如果你的组件需要使用内部 state，请直接在构造函数中为 this.state 赋值初始 state：\r\n     */\r\n    // 初始化照片墙状态：在修改时，可能原本product就有照片，所以传过来放入filelist中直接展示\r\n    const imgs = this.props.imgs || []\r\n    const fileList = imgs.map((img, index) => ({\r\n      uid: -index,  //每个file都有一个唯一id，建议为负数\r\n      name: img,    //图片名\r\n      status: 'done',//状态，上传完成\r\n      url: BASE_PIC_URL + img   //图片地址\r\n    }))\r\n    this.state = {\r\n      previewVisible: false,\r\n      previewImage: '',\r\n      fileList\r\n    }\r\n  }\r\n\r\n  //大图Modal（对话框）关闭时隐藏\r\n  handleCancel = () => this.setState({previewVisible: false});\r\n\r\n  //大图Modal（对话框）显示\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      // 如果没有url，那就使用base64\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true\r\n    });\r\n  };\r\n\r\n  //图片状态发生变化的回调\r\n  /*file为当前操作的文件对象，filelist为当前的文件列表*/\r\n  handleChange = async ({ file ,fileList }) => {\r\n    console.log('handleChange', fileList, file);\r\n    if (file.status === \"done\") {\r\n      const result = file.response\r\n      if (result.status === 0) {\r\n        message.success('上传成功了')\r\n        //重新指定file是因为file和fileList的最后一个数据虽然相同，但是并非指定同一个对象，并不相等\r\n        file = fileList[fileList.length - 1]\r\n        //对fileList中的系统内定的name和url重新设定\r\n        const {name, url} = result.data\r\n        file.name = name  //将文件名设为我们设定的文件名（在response.data中）\r\n        file.url = url\r\n      } else {\r\n        message.error('上传失败了')\r\n      }\r\n    } else if (file.status === 'removed') {\r\n      const result = await reqDeletePic(file.name)\r\n      if (result.status === 0) {\r\n        message.success(\"删除图片成功\")\r\n      } else {\r\n        message.error('删除图片失败')\r\n      }\r\n    }\r\n\r\n    // 在改变（上传、删除）中更新filelist状态\r\n    this.setState({fileList})\r\n  };\r\n\r\n  //定义一个方法获取当前图片，得到所有图片名字数组，传给父组件\r\n  getPictures = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\"/>\r\n\r\n        <div>Upload</div>\r\n      </div>\r\n    )\r\n    return (\r\n      <div>\r\n        <Upload\r\n          accept=\"image/*\" //接受的文件类型\r\n          action={BASE +\"/manage/img/upload\"} //上传图片的地址\r\n          name='image' //发送给后台的参数名，默认是file，所以必须指定，不指定后台无法得到数据\r\n          listType=\"picture-card\"   //图片样式：卡片样式\r\n          fileList={fileList}   //已上传文件列表\r\n          onPreview={this.handlePreview}    //显示指定图的大图\r\n          onChange={this.handleChange}    //当filelist改变时调用\r\n          >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage}/>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* \r\n  富文本编辑器，用了库https://jpuri.github.io/react-draft-wysiwyg\r\n*/\r\n//以下5个为demo中就引入的 \r\nimport React, { Component } from 'react';\r\nimport { EditorState, convertToRaw , ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nconst BASE = '/api'\r\n\r\nexport default class RichTextEditor extends Component {\r\n  static propTypes ={\r\n    detail:PropTypes.string\r\n  }\r\n\r\n  /*state = {\r\n    editorState: EditorState.createEmpty()  //创建没有内容的编辑对象\r\n  }*/\r\n\r\n  // 图片上传\r\n  uploadImageCallBack = (file)=> {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        // 用原生js写法发送ajax请求 \r\n        const xhr = new XMLHttpRequest();\r\n        // 记得加上基础路径api\r\n        xhr.open('POST', BASE + '/manage/img/upload');\r\n        // 不要设置请求头\r\n        //xhr.setRequestHeader('Authorization', 'Client-ID XXXXX');\r\n        const data = new FormData();\r\n        data.append('image', file);\r\n        xhr.send(data);\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText);\r\n          // 不按网上说的方法也可以的\r\n          // resolve(response);\r\n          // 但是还是按照官方文档说的——应答应返回一个对象。 { data: { link: <THE_URL>}}\r\n          resolve({data:{link:response.data.url}})\r\n          console.log(response)\r\n        });\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText);\r\n          reject(error);\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  // 根据已有的标签结构生成富文本编辑器内容\r\n  constructor (props){\r\n    super(props)\r\n    const html = this.props.detail\r\n    if(html){\r\n      // 如果html存在，就生成内容\r\n      const contentBlock = htmlToDraft(html);\r\n      if (contentBlock) {\r\n        const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n        const editorState = EditorState.createWithContent(contentState);\r\n        this.state = {\r\n          editorState\r\n        }\r\n      }\r\n    } else {\r\n      // 如果不存在，就创建一个空的编辑器对象\r\n      this.state = {\r\n        editorState: EditorState.createEmpty()\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /* 父组件获取子组件的数据有两种方式：\r\n    1.父组件定义函数，子组件调用，然后通过函数参数将数据传给父组件\r\n    2.子组件定义函数，函数返回值为数据，父组件通过ref取到该函数调用得到数据\r\n    两个方法不同在于函数调用的时机，即得到数据的时机\r\n    在这里，第一种不适合，因为若是在子组件调用，只能是更改数据就要调用，这样才能是最新数据，但这样多次调用效率低，父组件并不需要实时接收数据\r\n        那么就采用第二种，父组件调用，父组件在提交时调用得到数据，只调用一次，而且得到的也是最新（完整）数据\r\n  */\r\n  // 父组件调用该方法获取编辑器中的html代码\r\n  getEditor = () => {\r\n    // 将编辑器的文字样式什么的，转换为html代码\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  // 输入过程中调用\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorStyle={{border:\"1px solid black\",minHeight:200,padding:\"0 10px\"}}\r\n          onEditorStateChange={this.onEditorStateChange}  //当editorState改变触发\r\n          // 工具栏，设置图片上传\r\n          toolbar={{\r\n            image: { \r\n              uploadCallback: this.uploadImageCallBack, \r\n              alt: { present: true, mandatory: false },  //设置alt字段，present为是否显示设置，mandatory为是否强制\r\n              previewImage: true,   //设置这个配置就可以在缩略虚线框中看到图片了，而不是url\r\n            }\r\n          }}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card , Icon ,Form , Input ,  Button , Cascader , message } from 'antd'\r\n\r\nimport {reqCategorys , reqAddOrUpdateProduct} from '../../api/index.js'\r\nimport PicturesWall from './picture-wall.jsx'\r\nimport RichTextEditor from './rich-text-editor.jsx'\r\n\r\nconst { Item } = Form\r\nconst { TextArea } = Input\r\n\r\n\r\nclass AddUpdate extends Component {\r\n\r\n  state = {\r\n    options:[]\r\n  }\r\n\r\n  handleSubmit =  () =>{\r\n    this.props.form.validateFields ( async (error,values) =>{\r\n      //获取数据\r\n      if(!error){\r\n        const imgs = this.pw.current.getPictures()\r\n        const detail = this.editor.current.getEditor()\r\n        const {name , desc , price , categoryIds} = values\r\n        // 级联列表收集到的是categoryIds，是数组，可能两个id--一个父id一个子id，或者只有1个id\r\n        let pCategoryId , categoryId\r\n        if(categoryIds.length ===1){\r\n          // 只有一个id，说明为一级分类\r\n          pCategoryId=\"0\"\r\n          categoryId=categoryIds[0]\r\n        } else {\r\n          // 两个id，父id和自身id\r\n          pCategoryId=categoryIds[0]\r\n          categoryId=categoryIds[1]\r\n        }\r\n        // 将表单获取的数据整合到product对象中\r\n        const product = {name ,desc , price , pCategoryId , categoryId ,imgs , detail}\r\n        // 如果是更新，那就有初始_id，就把路由跳转时的_id赋给当前封装好的product对象上，以便后续更新商品\r\n        if(this.isUpdate){\r\n          product._id = this.product._id\r\n        }\r\n\r\n        //发送ajax请求\r\n        const result = await reqAddOrUpdateProduct(product)\r\n        if(result.status === 0){\r\n          message.success((this.isUpdate ? '更新' : \"添加\") +\"商品成功\")\r\n          //成功要返回home\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error((this.isUpdate ? '更新' : \"添加\") +\"商品失败\")\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  validatorPrice = (rule , value ,callback) =>{\r\n    if(value*1 > 0){\r\n      callback()\r\n    } else {\r\n      callback('价格必须大于0')\r\n    }\r\n  }\r\n\r\n  // 获取分类\r\n  // async函数返回一个promise对象，该promise对象的结果和值由函数的结果决定\r\n  getCategorys = async (parentId) =>{\r\n    const result = await reqCategorys(parentId)\r\n    if(result.status===0){\r\n      /*传来的是一级分类（初始化时传的就是0）*/\r\n      if(parentId===\"0\"){\r\n        // 初始化options\r\n        const firCategorys = result.data\r\n        const options = firCategorys.map(c => (\r\n          {\r\n            value: c._id,\r\n            label: c.name,\r\n            isLeaf: false\r\n          }\r\n        ))\r\n        // 更新options状态（因为这是第一次，之前是空数组，直接更新，覆盖上一次就可以了）\r\n        this.setState({options})\r\n\r\n        const {pCategoryId} = this.product\r\n        // 如果是获取更新界面（非添加），且商品父id不为0（即二级分类），那就递归调用获取该父分类下的二级分类\r\n        if(this.isUpdate && pCategoryId!==\"0\"){\r\n          const secCategorys = await this.getCategorys(pCategoryId)\r\n          // 通过二级分类循环处理得到子选项\r\n          const cOptions = secCategorys.map(c => ({\r\n            label: c.name,\r\n            value: c._id,\r\n            isLeaf:true\r\n          }))\r\n          // 通过所有options数组find方法找到当前应该选中的选项\r\n          const targetOption = options.find( option => option.value===pCategoryId)\r\n          // 将当前选中选项与其子选项对上\r\n          targetOption.children = cOptions\r\n          // 更新options\r\n          this.setState({options:[...this.state.options]})\r\n        }\r\n        \r\n      } else {\r\n        /*传来的是二级分类*/\r\n        return result.data\r\n      }\r\n    }\r\n  }\r\n\r\n  // 加了await，外层函数就要加async\r\n  loadData = async selectedOptions => {\r\n    // loadData参数为函数，函数回传选择选项的数组（一个也是数组，所以需要去除第一个）\r\n    const targetOption = selectedOptions[0];\r\n    // 将loading状态设为true\r\n    targetOption.loading = true;\r\n\r\n    /*获取二级列表 ， 因为getCategorys函数外加了async，返回了一个promise，所以要加await*/\r\n    const secCategorys = await this.getCategorys(targetOption.value)\r\n    // await等待后，获取到数据，将loading改为false\r\n    targetOption.loading = false;\r\n    if(secCategorys && secCategorys.length>0){\r\n      // 如果获取到的数据存在且长度大于0，就对数据遍历处理，赋值给子选项\r\n      const cOptions = secCategorys.map(c => ({\r\n        label: c.name,\r\n        value: c._id,\r\n        isLeaf:true\r\n      }))\r\n      // 然后设置目标选项的children属性值\r\n      targetOption.children = cOptions\r\n    }else{\r\n      // 没有获取到二级列表，那么就没有子选项，即是叶子\r\n      targetOption.isLeaf = true\r\n    }\r\n    // 更新options状态，涉及引用数据类型，targetOption就是指向options中的某个option\r\n    // 在上面的操作中我们相当于修改了state.options.xxx  ，但是需要通过setState才会重新render\r\n    this.setState({\r\n      // 这里最好用解构的语法来写，这样相当于是新的但相同的对象，指向的不是原对象，避免后续修改产生bug，虽然这里没有什么问题，但还是严谨一些\r\n      options: [...this.state.options],\r\n    })\r\n  }\r\n\r\n\r\n\r\n  constructor (props){\r\n    super(props)\r\n    // 在路由push跳转的时候，传了点击的商品给目标路由，就在location.state中\r\n    const product = this.props.location.state\r\n    // 如果是更新，product是有值的，将product强制转为布尔值来判断是否为更新\r\n    this.isUpdate = !!product\r\n    // product其他函数也要用，所以放到this上\r\n    this.product = product || {}\r\n\r\n    //通过ref得到子组件的方法\r\n    this.pw = React.createRef()\r\n    this.editor = React.createRef()\r\n\r\n  }\r\n\r\n  // 一般在这里发送异步请求，页面第一次render后，获取数据——获取级联列表1级分类\r\n  componentDidMount (){\r\n    this.getCategorys(\"0\")\r\n  }\r\n\r\n  render (){\r\n    const {product,isUpdate} = this\r\n    const {pCategoryId , categoryId , imgs , detail} = product\r\n    const categoryIds = []\r\n     if(pCategoryId === \"0\"){\r\n       categoryIds.push(categoryId)\r\n     } else {\r\n       categoryIds.push(pCategoryId)\r\n       categoryIds.push(categoryId)\r\n     }\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 2 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 9 }\r\n      }\r\n    }\r\n\r\n    const title = (\r\n      <span>\r\n        <Icon type='arrow-left' style={{color:\"#1DA57A\" , fontSize:20 , marginRight:5}} onClick={this.props.history.goBack}/>\r\n        {isUpdate ? \"修改商品\" : '添加商品' }\r\n      </span>\r\n    )\r\n\r\n    return(\r\n      <div>\r\n        <Card title={title} >\r\n          <Form {...formItemLayout} >\r\n            <Item label='商品名称'>\r\n              {\r\n                //这是高阶函数\r\n                this.props.form.getFieldDecorator('name',{\r\n                  initialValue:isUpdate ? product.name:'' ,\r\n                  rules:[\r\n                    {required:true , message:'名称必须输入'}\r\n                  ]\r\n                })(\r\n                  <Input placeholder=\"请输入商品名称\" />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item label='商品描述'>\r\n              {\r\n                //这是高阶函数\r\n                this.props.form.getFieldDecorator('desc',{\r\n                  initialValue:isUpdate ? product.desc:'' ,\r\n                  rules:[\r\n                    {required:true , message:'描述必须输入'}\r\n                  ]\r\n                })(\r\n                  <TextArea placeholder=\"请输入商品描述\" autoSize={{ minRows: 2, maxRows: 6 }} />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item label='商品价格'>\r\n              {\r\n                //这是高阶函数\r\n                this.props.form.getFieldDecorator('price',{\r\n                  initialValue:isUpdate ? product.price:'' ,\r\n                  rules:[\r\n                    {required:true , message:'价格必须输入'},\r\n                    {validator:this.validatorPrice}\r\n                  ]\r\n                })(\r\n                  <Input type=\"number\" placeholder=\"请输入商品价格\" addonAfter=\"元\"/>\r\n                )\r\n              }\r\n            </Item>\r\n            <Item label='商品分类'>\r\n              {\r\n                //这是高阶函数\r\n                this.props.form.getFieldDecorator('categoryIds',{\r\n                  initialValue:categoryIds\r\n                })(\r\n                  <Cascader\r\n                    options={this.state.options}/*需要显示的列表数据*/\r\n                    loadData={this.loadData}/*用于动态加载选项:当选择某个列表项，加载下一级列表的监听回调*/\r\n                    />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item label='商品图片'>\r\n              <PicturesWall ref={this.pw} imgs={imgs} />\r\n            </Item>\r\n            <Item label='商品详情' wrapperCol={{sm:{span:20}}} >\r\n              <RichTextEditor ref={this.editor} detail={detail} />\r\n            </Item>\r\n            <Item >\r\n              <Button type='primary' onClick={this.handleSubmit} >提交</Button>\r\n            </Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//要想进行表单验证，就要用Form的create的方法，将form传给组件\r\nexport default Form.create()(AddUpdate)","import React, {Component} from 'react'\r\nimport {Card ,Icon , List } from 'antd'\r\n\r\nimport {reqCategory} from '../../api/index.js'\r\nimport {BASE_PIC_URL} from '../../utils/constants.js'\r\n\r\nconst Item = List.Item\r\n\r\nexport default class Detail extends Component {\r\n\r\n  state = {\r\n    cName1:'',\r\n    cName2:''\r\n  }\r\n\r\n  async componentDidMount (){\r\n    const {pCategoryId,categoryId} = this.props.location.state\r\n    if(pCategoryId===\"0\"){\r\n      const result = await reqCategory(categoryId)\r\n      this.setState({cName1:result.data.name})\r\n    }else{\r\n      //多次发送\r\n      /*const result1 = await reqCategory(pCategoryId)\r\n      const result2 = await reqCategory(categoryId)\r\n      this.setState({cName1:result1.data.name , cName2:result2.data.name})*/\r\n      //一次性发送\r\n      const results = await Promise.all([reqCategory(pCategoryId),reqCategory(categoryId)])\r\n      this.setState({cName1:results[0].data.name , cName2:results[1].data.name})\r\n    }\r\n\r\n\r\n  }\r\n\r\n  render (){\r\n    const {cName1,cName2} = this.state\r\n    const title = (\r\n      <span>\r\n        <Icon type='arrow-left'\r\n              style={{fontSize:20 , marginRight:10,color:\"#1DA57A\"}}\r\n              onClick={() => this.props.history.goBack()}\r\n          />\r\n        商品详情\r\n      </span>\r\n    )\r\n\r\n    /*获取push传给这个组件的第二个参数state*/\r\n    const {name,desc,price,imgs,detail} = this.props.location.state\r\n\r\n    return(\r\n      <Card title={title} >\r\n        <List className='product-detail'>\r\n          <Item>\r\n            <span className=\"left\">商品名称：</span>\r\n            {name}\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品描述：</span>\r\n            {desc}\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品价格：</span>\r\n            {price}\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">所属分类：</span>\r\n            <span>{cName1} {cName2 ? \"-->\" + cName2 :\"\"} </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品图片：</span>\r\n            {\r\n              imgs.map(img => (\r\n                <img src={BASE_PIC_URL + img} alt=\"img\" key={img}/>\r\n              ))\r\n            }\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品详情：</span>\r\n            <span className=\"right\" dangerouslySetInnerHTML={{__html:detail}} ></span>\r\n          </Item>\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\n\r\nimport Home from './home.jsx'\r\nimport AddUpdate from './add-update.jsx'\r\nimport Detail from './detail.jsx'\r\nimport './product.less'\r\n\r\nexport default class Product extends Component {\r\n  render (){\r\n    return(\r\n      <div  >\r\n        <Switch>\r\n          {/* 写在前面，就要写exact，使其精准（完全）配备*/}\r\n          <Route path='/product' component={Home} exact/>\r\n          <Route path='/product/addupdate' component={AddUpdate} />\r\n          <Route path='/product/detail' component={Detail} />\r\n          {/*写在后面，就可以不用exact就可以解决带有/product就只跳转home的问题*/}\r\n          {/* <Route path='/product' component={Home} /> */}\r\n          <Redirect to='/product'/>\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Form ,Input} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst {Item} = Form\r\n\r\nclass AddForm extends Component {\r\n  static propsTypes = {\r\n    setForm:PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor (props){\r\n    super(props)\r\n    //给父级传递form对象\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render (){\r\n    const { getFieldDecorator } = this.props.form\r\n    return(\r\n      <Form>\r\n\r\n        <Item>\r\n          {\r\n            getFieldDecorator(\"roleName\",{\r\n              rules:[\r\n                {required:true,message:\"角色名必须输入\"}\r\n              ]\r\n            })(\r\n              <Input placeholder=\"请输入角色名称\"></Input>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {PureComponent} from 'react'\r\nimport {Form ,Input,Tree} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport menuList from '../../config/menuConfig.js'\r\n\r\nconst {Item} = Form\r\nconst { TreeNode } = Tree\r\n\r\n/*使用PureComponent，可使父组件状态改变，但是改变的状态并没有影响子组件时，子组件不会render*/\r\n/*PureComponent利用的是shouldComponentUpdate，不用我们自己定义这个生命周期是否返回true，它会自己进行state和props的浅比较*/\r\nexport default class AuthForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    role:PropTypes.object.isRequired,\r\n    onCheck:PropTypes.func.isRequired,\r\n    checkedKeys:PropTypes.array.isRequired\r\n  }\r\n  constructor (props){\r\n    super(props)\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n    // const {menus} = this.props.role\r\n    // 初始化该角色的选中为传来的角色中的menus\r\n      // 在官方文档上，是不建议将props的值赋给state的，在结构设计上应该直接用props\r\n      // 因为这样会产生新的bug，更新props时，并不会影响state，解决bug又要通过下面的一个componentDidUpdate来解决，实在鸡肋\r\n    // this.state = {checkedKeys:menus}\r\n    // 所以就按官网文档的，从组件中删除state，用props，更新数据也是父组件更新，然后再把数据传给子组件\r\n    //  https://react.docschina.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#preferred-solutions\r\n    \r\n  }\r\n\r\n  getTreeNodes = (menuList) =>{\r\n    return menuList.reduce((pretotal , item)=>{\r\n      pretotal.push (\r\n        <TreeNode title={item.title} key={item.key} >\r\n          {/* 有子标签，那就递归调用 */}\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pretotal\r\n    },[])\r\n  }\r\n\r\n  /* 以下注释是原做法：将props的值复制到state上，然后更新state，再传给父组件的一系列操作\r\n      在constructor的注释也有说，这样会产生bug，所以我们通过componentDidUpdate解决\r\n        但是这样其实也有问题（官方说的，虽然这里没有体现出来）\r\n        所以就不用这种官方不推荐的props复制到state的做法了\r\n  */\r\n  // 在选中的时候更新选中的key数组\r\n  // onCheck = (checkedKeys, info) => {\r\n  //   // this.setState({checkedKeys})\r\n  //   // this.props.role.menus = checkedKeys\r\n    \r\n  //   console.log('onCheck', checkedKeys, this.props.role.menus);\r\n  // }\r\n\r\n  /*将子元素的数据通过方法传给父元素调用*/\r\n  // getMenus = () => this.state.checkedKeys\r\n\r\n  /*该生命周期已经过时，之后懂了回来改*/\r\n /* UNSAFE_componentWillReceiveProps (nextProps){\r\n    /!*目的是每次重新获取相应角色的勾选状态，而不是缓存状态*!/\r\n    const menus = nextProps.role.menus\r\n    this.setState({checkedKeys:menus})\r\n    console.log('UNSAFE_componentWillReceiveProps' , nextProps);\r\n  }*/\r\n  /*替代过时的UNSAFE_componentWillReceiveProps*/\r\n  // componentDidUpdate(prevProps,prevState) 会在更新后会被立即调用（render后）。首次渲染不会执行此方法。\r\n  // componentDidUpdate (prevProps){\r\n  //   // 经典用法，比较新的和旧的props，因为我们要在里面setState，如果不比较，会进入死循环\r\n  //   if(this.props.role !== prevProps.role){\r\n  //     /*目的是每次重新获取相应角色的勾选状态，而不是缓存状态*/\r\n  //     const menus = this.props.role.menus\r\n  //     // 在官方文档上，是不建议将props的值赋给state的，在结构设计上应该直接用props\r\n  //     this.setState({checkedKeys:menus})\r\n  //     console.log('componentDidUpdate' , prevProps);\r\n  //   }\r\n  // }\r\n  \r\n  render (){\r\n    const {role , checkedKeys , onCheck} = this.props\r\n    console.log('render');\r\n    // const {checkedKeys} = this.state\r\n    /*在这里写formItemLayout，引入的时候一定要三点运算符*/\r\n    const formItemLayout = {\r\n      labelCol: {\r\n         span: 4\r\n      },\r\n      wrapperCol: {\r\n         span: 15\r\n      }\r\n    }\r\n    return(\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout} >\r\n          <Input value={role.name} disabled />\r\n        </Item>\r\n        {/* 设置权限的树组件 */}\r\n        <Tree\r\n          defaultExpandAll  //默认全部展开\r\n          checkable   //节点前添加 Checkbox 复选框，即是否可以选中\r\n          checkedKeys={checkedKeys}   //选中的key数组\r\n          onCheck={onCheck}    //选中时触发\r\n          >\r\n          <TreeNode title=\"角色授权\" key=\"0-0\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Card ,Table , Button , message , Modal} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {reqRoleList} from '../../api'\r\nimport {PAGE_SIZE} from '../../utils/constants.js'\r\nimport AddForm from './add-form'\r\nimport {reqAddRole , reqUpdateRole} from '../../api'\r\nimport AuthForm from './auth-form'\r\n//import storage from '../../utils/storageUtils.js'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {logout} from '../../redux/actions'\r\n\r\nclass Role extends Component {\r\n  state = {\r\n    roles:[],\r\n    role:{},\r\n    isShowAdd:false,\r\n    isShowAuth:false,\r\n    checkedKeys:[]\r\n  }\r\n\r\n  initColumns = [\r\n    {\r\n      title: '角色名',\r\n      dataIndex: 'name'\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'create_time',\r\n      render:(create_time) => formateDate(create_time)\r\n    },\r\n    {\r\n      title: '授权时间',\r\n      dataIndex: 'auth_time',\r\n      render:formateDate\r\n    },\r\n    {\r\n      title: '授权人',\r\n      dataIndex: 'auth_name'\r\n    },\r\n  ]\r\n\r\n  getRoleList = async ()=>{\r\n    const result = await reqRoleList()\r\n    if(result.status === 0){\r\n      this.setState({roles:result.data})\r\n    } else {\r\n      message.error('角色列表获取失败')\r\n    }\r\n  }\r\n\r\n  // 设置行属性，为函数，参数为该行记录，返回一个配置对象，可以根据需要配置\r\n  onRow = role => {\r\n    return {\r\n      // 点击行时触发,将role更新，且将checkedKeys更新，子组件就有初始选中数组了\r\n      onClick: event => {\r\n        this.setState({role,checkedKeys:role.menus})\r\n      }\r\n    }\r\n  }\r\n\r\n  addRole = ()=> {\r\n    this.form.validateFields (async(error, values) =>{\r\n        if(error){\r\n          return\r\n        }\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n        const result = await reqAddRole(roleName)\r\n        if(result.status === 0){\r\n          this.setState({isShowAdd:false})\r\n          message.success('添加角色成功')\r\n        /*更新数据方法1，重新发送请求，从后台获取数据，再更新数据--不推荐，因为不宜多次发送请求*/\r\n          //this.getRoleList()\r\n        /*更新数据方法2———2、3差不多，都是通过添加角色后台返回的数据，直接更新状态\r\n          只是形式不一样，但注意的是最好不要直接更改state，因为setState是会对新旧state进行对比进行render，所以都采用了...运算符*/\r\n          const role = result.data\r\n          this.setState(state =>({\r\n            roles:[...state.roles,role]\r\n          }))\r\n          /*更新数据方法3*/\r\n          /*const roles = [...this.state.roles]\r\n          roles.push(role)\r\n          this.setState({roles})*/\r\n\r\n        } else {\r\n          message.error('添加角色成功')\r\n        }\r\n      }\r\n    )\r\n\r\n\r\n  }\r\n\r\n  setRole = async () => {\r\n    const role = this.state.role\r\n    // 通过ref获取子组件的数据\r\n    // role.menus = this.menus.current.getMenus()\r\n    role.menus = this.state.checkedKeys\r\n    role.auth_time = Date.now()\r\n    //role.auth_name = storage.getUser().username\r\n    role.auth_name = this.props.user.username\r\n\r\n    /*这样是另一个role，加进去的menus、auth等都不会保存给当前选中的role，只有当再发送请求，重新获取role时才得到当前role*/\r\n    //const role = {menus , _id , auth_time , auth_name}\r\n\r\n    const result = await reqUpdateRole(role)\r\n    if(result.status === 0){\r\n      this.setState({isShowAuth:false})\r\n      //const role = result.data\r\n      /*this.setState(state => ({\r\n        roles:[...state.roles,role]\r\n      }))*/\r\n      this.setState({\r\n        roles:[...this.state.roles]\r\n      })\r\n      //this.getRoleList()\r\n\r\n      // 如果修改的是自己角色的权限，那就重新登录，重新渲染角色权限该有的界面\r\n      if(role._id === this.props.user.role_id ){\r\n        /*storage.removeUser()\r\n        this.props.history.replace('/login')*/\r\n        this.props.logout()\r\n        message.success('权限发生改变，请重新登录')\r\n      } else {\r\n        message.success('授权管理成功')\r\n      }\r\n\r\n    } else {\r\n      message.error('授权管理失败')\r\n    }\r\n\r\n  }\r\n\r\n  // 将checkedKeys数据和该函数传给子组件，在子组件行点击调用，因为函数作用域+箭头函数this向上捕获，改变的是父组件的state\r\n  onCheck = (checkedKeys, info) => {\r\n    this.setState({checkedKeys})\r\n    // console.log('onCheck', checkedKeys);\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.columns = this.initColumns\r\n    this.menus = React.createRef()\r\n  }\r\n  componentDidMount (){\r\n    this.getRoleList()\r\n  }\r\n  render (){\r\n    const {roles , role , isShowAdd , isShowAuth , checkedKeys} = this.state\r\n    const title = (\r\n      <span>\r\n        <Button type='primary' onClick={() =>this.setState({isShowAdd:true})} >创建角色</Button>&nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={() =>this.setState({isShowAuth:true , role})}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n\r\n    return(\r\n      <div>\r\n        <Card title={title} >\r\n          <Table\r\n            rowKey=\"_id\"\r\n            dataSource={roles}\r\n            columns={this.columns}\r\n            pagination={{defaultPageSize:PAGE_SIZE , showQuickJumper:true}}\r\n            onRow={this.onRow}\r\n            rowSelection={{type:'radio' , selectedRowKeys:[role._id] , onSelect:(role) => this.setState({role}) } }\r\n            />\r\n\r\n          <Modal\r\n            title=\"添加角色\"\r\n            visible={isShowAdd}\r\n            onOk={this.addRole}\r\n            onCancel={()=>{this.setState({isShowAdd:false})}}\r\n            >\r\n            <AddForm setForm={ form => this.form = form} />\r\n          </Modal>\r\n\r\n          <Modal\r\n            title=\"设置角色权限\"\r\n            visible={isShowAuth}\r\n            onOk={this.setRole}\r\n            onCancel={()=>{this.setState({isShowAuth:false,checkedKeys:role.menus})}}\r\n            >\r\n            <AuthForm role={role} \r\n            // 将checkedKeys数据和onCheck函数传给子组件\r\n            checkedKeys={checkedKeys} onCheck={this.onCheck} \r\n            // ref={this.menus} 用了上面这种方式，将函数和数据放在父组件上，不在子组件上，就不用获取子组件的数据了\r\n             />\r\n          </Modal>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect (\r\n  state => ({user:state.user}),\r\n  {logout}\r\n)(Role)","// 添加或修改用户\r\nimport React, {Component} from 'react'\r\nimport {Form ,Input,Select} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst {Option} = Select\r\nconst {Item} = Form\r\n\r\nclass UserForm extends Component {\r\n  static propsTypes = {\r\n    setForm:PropTypes.func.isRequired,\r\n    roles:PropTypes.array.isRequired,\r\n    user:PropTypes.object\r\n  }\r\n\r\n  constructor (props){\r\n    super(props)\r\n    //给父级传递form对象\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render (){\r\n    const { getFieldDecorator } = this.props.form\r\n    const {roles} =  this.props\r\n    const user = this.props.user || {}\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 18 }\r\n      }\r\n    }\r\n    return(\r\n      <Form {...formItemLayout} >\r\n        <Item label=\"用户名\" >\r\n          {\r\n            getFieldDecorator(\"username\",{\r\n              initialValue:user.username,\r\n              rules:[\r\n                {required:true,message:\"用户名必须输入\"},\r\n                {min:3,message:\"用户名不小于3位\"}\r\n              ]\r\n            })(\r\n              <Input placeholder=\"请输入用户名称\"></Input>\r\n            )\r\n          }\r\n        </Item>\r\n          {\r\n            user._id ? null : (\r\n              <Item label=\"密码\" >\r\n                {\r\n                  getFieldDecorator(\"password\",{\r\n                    initialValue:'',\r\n                    rules:[\r\n                  {required:true,message:\"密码必须输入\"},\r\n                  {min:5,message:\"密码不小于5位\"}\r\n                    ]\r\n                  })(\r\n                    <Input type=\"password\" placeholder=\"请输入密码\"></Input>\r\n                    )\r\n                }\r\n              </Item>\r\n            )\r\n          }\r\n        <Item label=\"电话\" >\r\n          {\r\n            getFieldDecorator(\"phone\",{\r\n              initialValue:user.phone,\r\n              rules:[\r\n                {pattern:/^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/,message:\"请输入正确的手机号码\"}\r\n              ]\r\n            })(\r\n              <Input placeholder=\"请输入电话号码\"></Input>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label=\"邮箱\" >\r\n          {\r\n            getFieldDecorator(\"email\",{\r\n              initialValue:user.email,\r\n              rules:[\r\n                {pattern:/\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,message:\"请输入正确的邮箱\"}\r\n              ]\r\n            })(\r\n              <Input placeholder=\"请输入邮箱\"></Input>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label=\"角色名称\" >\r\n          {\r\n            getFieldDecorator(\"role_id\",{\r\n              initialValue:user.role_id\r\n            })(\r\n              <Select placeholder='请选择角色' >\r\n                {\r\n                  roles.map(role => (<Option value={role._id} key={role._id} >{role.name}</Option>))\r\n                }\r\n\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm)","/* 用户管理界面 */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Card , Button , Modal , Table ,message} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button/index.js'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {reqUserList , reqAddOrUpdateUSer ,reqDeleteUser } from '../../api/index.js'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport UserForm from './user-form.jsx'\r\n\r\nconst { confirm } = Modal;\r\n\r\nexport default class User extends Component {\r\n  state = {\r\n    visible:false,\r\n    users:[],\r\n    roles:[],\r\n    user:{}\r\n  }\r\n\r\n  initColumns = ()=>{\r\n    return [\r\n      {\r\n        title:\"用户名\",\r\n        dataIndex:'username'\r\n      },\r\n      {\r\n        title:\"电话\",\r\n        dataIndex:'phone'\r\n      },\r\n      {\r\n        title:\"邮箱\",\r\n        dataIndex:'email'\r\n      },\r\n      {\r\n        title:\"角色\",\r\n        dataIndex:'role_id',\r\n        render:(role_id) => this.rolesName[role_id]\r\n      },\r\n      {\r\n        title:\"创建时间\",\r\n        dataIndex:'create_time',\r\n        render:formateDate\r\n      },\r\n      {\r\n        title:\"操作\",\r\n        render:(user)=>(\r\n          <span>\r\n            <LinkButton onClick={() => {this.setState({user,visible:true})}} >修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)} >删除</LinkButton>\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n\r\n  getUsers = async()=>{\r\n    const result = await reqUserList()\r\n    if(result.status === 0){\r\n      const {users,roles} = result.data\r\n      this.rolesName = this.getRolesName(roles)\r\n      this.setState({users,roles})\r\n    }\r\n  }\r\n\r\n  getRolesName = (roles) => {\r\n    return roles.reduce((preTotal , role) => {\r\n      preTotal[role._id] = role.name\r\n      return preTotal\r\n    },[])\r\n  }\r\n\r\n  showAdd = () => {\r\n    this.setState({visible:true , user:{}})\r\n  }\r\n\r\n  addOrUpdateUser = () => {\r\n    this.form.validateFields( async (error,values) => {\r\n      if(error){\r\n        return\r\n      }\r\n      const {_id} = this.state.user\r\n      values._id = _id\r\n      const result = await reqAddOrUpdateUSer(values)\r\n      this.form.resetFields()\r\n      if(result.status ===0){\r\n        this.getUsers()\r\n        this.setState({visible:false})\r\n        message.success((_id ? \"修改\" : \"添加\") + \"用户成功\")\r\n      } else {\r\n        message.error((_id ? \"修改\" : \"添加\") + \"用户失败\")\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteUser =  (user) => {\r\n    console.log(user);\r\n    confirm({\r\n      title: `你确定要删除<${user.username}>吗？`,\r\n      okText: '确定',\r\n      okType: 'danger',\r\n      cancelText: '取消',\r\n      onOk:async () =>{\r\n        const result = await reqDeleteUser(user._id)\r\n        console.log(result);\r\n        if(result.status === 0){\r\n          this.getUsers()\r\n          message.success(\"删除用户成功\")\r\n        }else{\r\n          message.error(\"删除用户失败\")\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n  constructor(props){\r\n    super(props)\r\n    this.columns = this.initColumns()\r\n    this.getUsers()\r\n  }\r\n\r\n  render (){\r\n    const {roles , users , visible ,user} = this.state\r\n    return(\r\n      <Card title={<Button type=\"primary\" onClick={this.showAdd} >创建用户</Button>} >\r\n        <Table\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          rowKey = '_id'\r\n          bordered\r\n          pagination = {{defaultPageSize:PAGE_SIZE,showQuickJumper:true}}\r\n          />\r\n\r\n        <Modal\r\n          title={(user._id ? '修改' : \"添加\") + \"用户\" }\r\n          visible={visible}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() =>{\r\n            this.form.resetFields()\r\n            this.setState({visible:false})\r\n          }}\r\n          >\r\n          <UserForm setForm={form => this.form = form} roles={roles} user={user} />\r\n        </Modal>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card , Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Bar extends Component {\r\n  state = {\r\n    sales:[5, 20, 36, 10, 10, 20],\r\n    stores:[7, 50, 53, 20, 9, 20]\r\n  }\r\n  update = ()=>{\r\n    this.setState(state => ({\r\n      sales:state.sales.map(item => item + 1),\r\n      stores:state.stores.map(item => item - 1)\r\n    }))\r\n  }\r\n\r\n  setOption = ()=>{\r\n    return  {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量','库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: this.state.sales\r\n      },\r\n        {\r\n          name: '库存',\r\n          type: 'bar',\r\n          data: this.state.stores\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render (){\r\n    return(\r\n      <div>\r\n        <Card title='柱状图'>\r\n          <Button type='primary' onClick={this.update} >更新</Button>\r\n        </Card>\r\n        <Card title='柱状图'>\r\n          <ReactEcharts option={this.setOption()} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card , Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Line extends Component {\r\n  state = {\r\n    sales:[5, 20, 36, 10, 10, 20],\r\n    stores:[7, 50, 53, 20, 9, 20]\r\n  }\r\n  update = ()=>{\r\n    this.setState(state => ({\r\n      sales:state.sales.map(item => item + 1),\r\n      stores:state.stores.map(item => item - 1)\r\n    }))\r\n  }\r\n\r\n  setOption = ()=>{\r\n    return  {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量','库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: this.state.sales\r\n      },\r\n        {\r\n          name: '库存',\r\n          type: 'line',\r\n          data: this.state.stores\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render (){\r\n    return(\r\n      <div>\r\n        <Card title='柱状图'>\r\n          <Button type='primary' onClick={this.update} >更新</Button>\r\n        </Card>\r\n        <Card title='柱状图'>\r\n          <ReactEcharts option={this.setOption()} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card , Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Pie extends Component {\r\n  /*state = {\r\n    sales:[5, 20, 36, 10, 10, 20],\r\n    stores:[7, 50, 53, 20, 9, 20]\r\n  }\r\n  update = ()=>{\r\n    this.setState(state => ({\r\n      sales:state.sales.map(item => item + 1),\r\n      stores:state.stores.map(item => item - 1)\r\n    }))\r\n  }*/\r\n\r\n  setOption = ()=> {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '50%'],\r\n          data: [\r\n            {value: 335, name: '直接访问'},\r\n            {value: 310, name: '邮件营销'},\r\n            {value: 274, name: '联盟广告'},\r\n            {value: 235, name: '视频广告'},\r\n            {value: 400, name: '搜索引擎'}\r\n          ].sort(function (a, b) {\r\n              return a.value - b.value;\r\n            }),\r\n          roseType: 'radius',\r\n          label: {\r\n            color: 'rgba(255, 255, 255, 0.3)'\r\n          },\r\n          labelLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.3)'\r\n            },\r\n            smooth: 0.2,\r\n            length: 10,\r\n            length2: 20\r\n          },\r\n          itemStyle: {\r\n            color: '#c23531',\r\n            shadowBlur: 200,\r\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render (){\r\n    return(\r\n      <div>\r\n        <Card title='柱状图'>\r\n          <Button type='primary' onClick={this.update} >更新</Button>\r\n        </Card>\r\n        <Card title='柱状图'>\r\n          <ReactEcharts option={this.setOption()} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {setHeaderTitle} from '../../redux/actions'\r\n\r\nimport './not-found.less'\r\n/* 前 台 404页 面*/\r\nclass NotFound extends Component {\r\n  goHome = () => {\r\n    this.props.setHeaderTitle('首页')\r\n    this.props.history.replace('/home')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col> <Col span={12} className='right'><h1>404</h1>\r\n\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n\r\n          <div>\r\n            <Button type='primary' onClick={this.goHome}> 回到首页 </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  null,\r\n  {setHeaderTitle}\r\n)(NotFound)\r\n","import React, {Component} from 'react'\r\n// 引入路由\r\nimport {Redirect,Switch,Route} from 'react-router-dom'\r\n// 引入antd中的Layout布局\r\nimport { Layout } from 'antd';\r\n// 使用插件简化redux的编码，使UI组件和redux解耦\r\nimport {connect} from 'react-redux'\r\n\r\n// 使用redux管理了，就用不到这个了\r\n// import storage from '../../utils/storageUtils.js'\r\n// 以下两个是非路由组件，若是有redux的概念就是抽出的UI组件，没有redux，不负责业务逻辑，只是UI展现\r\nimport Header from '../../components/header/header.jsx'\r\nimport LeftNav from '../../components/left-nav/left-nav.jsx'\r\n\r\n// 引入二级路由组件（因为这个项目一开始没有设计用redux，所以没有containers的概念，这里就将所有路由组件放在一起了）\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport NotFound from '../not-found/not-found.jsx'\r\n\r\nconst {Footer, Sider, Content } = Layout;\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    // 获取redux中的user  在用了connect后，Main组件上有state，所以可以通过this.props取到\r\n    let user = this.props.user\r\n    // 判断user的id是否存在，不存在，即到重定向到登录界面\r\n    if (!user._id) {\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      // 这个布局就是官方文档上的侧边布局，不过这里没有做收缩效果，感兴趣可以试试\r\n      // 设置最小高度，使其高度为页面高\r\n      <Layout style={{minHeight:'100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{backgroundColor:\"white\",margin:20}}>\r\n            {/* 在Main中引入路由组件后注册路由 */}\r\n            <Switch>\r\n              <Redirect exact from='/'  to='/home'/>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={Category}/>\r\n              <Route path='/product' component={Product}/>\r\n              <Route path='/role' component={Role}/>\r\n              <Route path='/user'component={User}/>\r\n              <Route path='/charts/bar' component={Bar}/>\r\n              <Route path='/charts/line' component={Line}/>\r\n              <Route path='/charts/pie' component={Pie}/>\r\n              <Route  component={NotFound}/>\r\n            </Switch>\r\n\r\n          </Content>\r\n          <Footer style={{textAlign:\"center\",color:\"grey\"}}>推荐使用谷歌浏览器，可以获得更加的页面显示操作效果</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\n// connect为高阶函数，这一步大概就是让redux中的state和封装好dispatch后的action作为组件Main的属性\r\nexport default connect(\r\n  state => ({user:state.user}),\r\n  {}\r\n)(Main)","// 整个app的入口，主要是配置一级路由（写在index.js也可）\nimport React, {Component} from 'react'\n// 引入路由，注意这里用的是BrowserRouter\n  // 与HashRouter区别在于，不带#，且问题在于生产环境打包后，若是前台后台用同一个服务器（不跨域），那么就会访问不到主界面，需要在后台使用中间件将其引导访问到打包好后的index.html\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\n\n// 引入一级路由\nimport Login from \"./pages/login/login.jsx\"\nimport Main from './pages/main/main.jsx'\n\nexport default class App extends Component {\n  render (){\n    return(\n        <BrowserRouter>\n          <Switch>\n            <Route path='/login' component={Login} />\n            <Route path='/' component={Main} />\n          </Switch>\n        </BrowserRouter>\n    )\n  }\n}","import {combineReducers} from 'redux'\r\nimport storage from '../utils/storageUtils.js'\r\n\r\nimport {SET_HEADER_TITLE , RECEIVE_USER , SEND_ERROR_MSG , RESET_USER , UPDATE_PAGE} from './action-types.js'\r\n\r\nconst initHeaderTitle = '首页'\r\nfunction headerTitle (state=initHeaderTitle , action){\r\n  switch (action.type){\r\n    case SET_HEADER_TITLE:\r\n      return action.data\r\n    default : return state\r\n  }\r\n}\r\n\r\n/*初始值一定不能是空对象，否则每次渲染都是空对象，保存的user就没有了，应该是已经登录的user*/\r\nconst inituser = storage.getUser()  //这一步算是实现自动登录的一步\r\nfunction user (state=inituser , action){\r\n  switch (action.type){\r\n    case RECEIVE_USER :\r\n      //const user = action.user\r\n      return action.user\r\n    case SEND_ERROR_MSG:\r\n      const msg = action.msg\r\n      /*不推荐这么写，因为不能改变原有的state*/\r\n      /*state.msg = msg\r\n      return state*/\r\n      /*推荐这么写*/\r\n      return {...state,msg}\r\n    case RESET_USER :\r\n      return {}\r\n    default : return state\r\n  }\r\n}\r\n\r\nfunction productPage (state=1 , action){\r\n  switch (action.type){\r\n    case UPDATE_PAGE:\r\n      return action.pageNum\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  headerTitle,\r\n  user,\r\n  productPage\r\n})\r\n","import {createStore ,  applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducer from './reducer.js'\r\n\r\nexport default createStore(reducer ,  composeWithDevTools(applyMiddleware(thunk)))","// 入口js，主要进行store的引入，以及渲染至主index.html（其实将app.js的内容直接写在这里也可）\nimport React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\n\nimport App from './app'\n//import 'antd/dist/antd.css'\nimport store from './redux/store.js'\n\nrender(\n  <Provider store={store} >\n    <App/>\n  </Provider>\n  ,document.getElementById('root')\n)","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}